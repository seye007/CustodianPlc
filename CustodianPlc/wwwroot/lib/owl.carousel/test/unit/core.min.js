/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/owl.carousel@2.3.4/test/unit/core.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
function before_and_after_replace(e){var r,t=$("#simple"),a=t.html();t.owlCarousel(e),r=t.html(),t.trigger("replace.owl.carousel",[a]),t.trigger("refresh.owl.carousel"),equal(t.html(),r,"Inner HTML before and after replace equals.")}function before_and_after_remove(e){var r=$("#simple"),t=r.clone().removeAttr("id").insertAfter("#simple"),a=t.clone().insertAfter(t),o=a.clone().insertAfter(a);t.children(":eq(0)").remove(),a.children(":eq(0),:eq(2)").remove(),o.children().remove(),r.owlCarousel(e),t.owlCarousel(e),a.owlCarousel(e),o.owlCarousel(e),r.trigger("remove.owl.carousel",[0]),r.trigger("refresh.owl.carousel"),equal(r.html(),t.html(),"Inner HTML before and after remove one equals."),r.trigger("remove.owl.carousel",[1]),r.trigger("refresh.owl.carousel"),equal(r.html(),a.html(),"Inner HTML before and after remove two equals."),r.trigger("remove.owl.carousel",[0]),r.trigger("refresh.owl.carousel"),equal(r.html(),o.html(),"Inner HTML before and after remove all equals.")}function before_and_after_remove_add(e){var r=$("#simple"),t=$("#simple").clone().removeAttr("id").insertAfter("#simple");t.children(":eq(0)").text("2"),t.children(":eq(1)").text("3"),t.children(":eq(2)").text("1"),r.owlCarousel(e),t.owlCarousel(e),r.trigger("remove.owl.carousel",[0]),r.trigger("add.owl.carousel",["<li>1</li>"]),r.trigger("refresh.owl.carousel"),equal(r.html(),t.html(),"Inner HTML before and after `remove()` and `add()` equals.")}module("Core tests"),test("replace with loop",function(){expect(1),before_and_after_replace({loop:!0})}),test("replace without loop",function(){expect(1),before_and_after_replace({loop:!1})}),test("remove with loop",function(){expect(3),before_and_after_remove({loop:!0})}),test("remove without loop",function(){expect(3),before_and_after_remove({loop:!1})}),test("remove and add with loop",function(){expect(1),before_and_after_remove_add({loop:!0})}),test("remove and add without loop",function(){expect(1),before_and_after_remove_add({loop:!1})}),test("invalidate",function(){expect(6);var e=$("#simple").owlCarousel().data("owl.carousel");deepEqual(e.invalidate(),[],"No invalid parts after initializing."),e.invalidate("first"),deepEqual(e.invalidate(),["first"],"One invalid part after invalidating one."),e.invalidate("second"),deepEqual(e.invalidate(),["first","second"],"Two invalid parts after invalidating a second one."),e.invalidate("second"),deepEqual(e.invalidate(),["first","second"],"Two invalid parts after invalidating a part twice."),e.update(),deepEqual(e.invalidate(),[],"No invalid parts after updating."),deepEqual(e.invalidate("first"),["first"],"Invalidating one part returns it directly.")}),test("destroy",function(){expect(1);var e=$("#simple"),r=e.get(0).outerHTML.replace(/\s{2,}/g,"");e.owlCarousel().owlCarousel("destroy"),equal(e.get(0).outerHTML.replace(/\s{2,}/g,""),r,"Outer HTML before create and after destroy is equal.")}),start();
//# sourceMappingURL=/sm/d6b10eec9f2e8ddb3300a07607c5ed2bdd2b81da1c227ddc77df8b384c60ca87.map